{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","api/unsplash.js","components/App.js","index.js"],"names":["SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSearchSubmit","className","onSubmit","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","urls","alt_description","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","key","id","axios","create","baseURL","headers","Authorization","App","a","unsplash","get","params","query","response","data","results","ReactDOM","render","document","querySelector"],"mappings":"4PA6BeA,E,4MA1BXC,MAAQ,CAACC,KAAM,S,EAEfC,aAAe,SAACC,GACZA,EAAMC,iBACN,EAAKC,MAAMC,eAAe,EAAKN,MAAMC,O,uDAOhC,IAAD,OACJ,OACI,0BAAMM,UAAU,UAAUC,SAAYC,KAAKP,cACvC,yBAAKK,UAAU,SACX,qDACA,2BAAOG,KAAK,OAAOC,MAASF,KAAKT,MAAMC,KAAMW,SAAW,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAACb,KAAMY,EAAEE,OAAOJ,iB,GAjBvFK,IAAMC,WC2BfC,G,wDA1BX,WAAYb,GAAO,IAAD,8BACd,cAAMA,IAUVc,SAAU,WAEP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKN,SAAS,CAACU,MAAOA,KAbrB,EAAKxB,MAAO,CAAEwB,MAAO,GACrB,EAAKH,SAAWL,IAAMW,YAHR,E,gEAOhBlB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,+BAW7C,IAAD,EAC4BV,KAAKJ,MAAMwB,MAApCC,EADH,EACGA,KAAMC,EADT,EACSA,gBACb,OACI,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUxB,KAAKT,MAAMwB,QAAUU,IAAOzB,KAAKY,SAAUc,IAAKL,EAAKM,QAASC,IAAKN,Q,GAtBzFf,IAAMC,YCcfqB,EAZG,SAASjC,GAEvB,IAAMkC,EAAWlC,EAAMkC,OAAOC,KAAI,SAAAX,GAE9B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAGhD,OAAO,yBAAKtB,UAAU,cAAf,IAA8BgC,I,QCTtBI,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,4BACTC,QAAU,CAAEC,cAAe,2DCgChBC,E,4MA3BXhD,MAAO,CAACuC,OAAQ,I,EAMhBjC,e,uCAAgB,WAAOL,GAAP,eAAAgD,EAAA,sEAESC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAOpD,KAHP,OAERqD,EAFQ,OAMd,EAAKxC,SAAS,CAACyB,OAAQe,EAASC,KAAKC,UANvB,2C,wHAHZ/C,KAAKH,eAAe,W,+BAcpB,OACI,yBAAKC,UAAU,gBACX,kBAAC,EAAD,CAAWD,eAAiBG,KAAKH,iBACjC,kBAAC,EAAD,CAAWiC,OAAS9B,KAAKT,MAAMuC,c,GArB7BvB,IAAMC,WCHxBwC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,cAAc,Y","file":"static/js/main.c254d486.chunk.js","sourcesContent":["import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = {term: 'house'};\n\n    onFormSubmit = (event)=> {\n        event.preventDefault();\n        this.props.onSearchSubmit(this.state.term);\n\n    }\n\n\n\n\n    render(){\n        return(\n            <form className=\"ui form\" onSubmit = {this.onFormSubmit }>\n                <div className=\"field\">\n                    <label> Enter Search Term</label>\n                    <input type=\"text\" value = {this.state.term} onChange ={e => this.setState({term: e.target.value})} />\n                </div>\n               \n            </form>\n        );\n            \n    \n    }\n};\n\nexport default SearchBar;","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={ spans: 0};\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount(){\n      this.imageRef.current.addEventListener('load', this.setSpans );\n\n    }\n\n    setSpans =() => {\n       // console.log(this.imageRef.current.clientHeight);\n       const height = this.imageRef.current.clientHeight;\n       const spans = Math.ceil(height / 20);\n       this.setState({spans: spans});\n    }\n\n    render(){\n        const {urls, alt_description} = this.props.image;\n        return(\n            <img style={{ gridRowEnd: `span ${this.state.spans}`}} ref = {this.imageRef} src={urls.regular} alt={alt_description} />\n        );\n    }\n}\n\nexport default ImageCard;","import './ImageList.css';\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\nconst ImageList = function(props){\n   \n    const images =   props.images.map(image => {\n      //  return ( <img src= {image.urls.regular} alt={image.alt_description} key = {image.id} />);\n        return <ImageCard key={image.id} image={image} />;\n    });\n\nreturn <div className=\"image-list\"> {images }</div>\n\n    \n\n};\nexport default ImageList;","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com/',\n    headers : { Authorization: 'Client-ID uHbL7a_ZWe0jkK8oai_-KoDyLIY5DTWzLKoEbdNjhXA'}\n});","import React from 'react';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\nimport unsplash from '../api/unsplash';\n\n\n// uHbL7a_ZWe0jkK8oai_-KoDyLIY5DTWzLKoEbdNjhXA\n\nclass App extends React.Component {\n    state ={images: []};\n\n    componentDidMount(){\n        this.onSearchSubmit('house');\n    }\n\n    onSearchSubmit= async (term) => {\n     \n      const response = await unsplash.get('/search/photos', {\n          params: { query: term}\n      })\n      \n      this.setState({images: response.data.results});\n\n    }\n\n    render(){\n        return (\n            <div className=\"ui container\">\n                <SearchBar onSearchSubmit ={this.onSearchSubmit}/>\n                <ImageList images ={this.state.images} />\n            </div>\n        );\n    }\n  \n};\n\nexport default App;","import 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}